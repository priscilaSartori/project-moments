{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction MomentFormComponent_div_7_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"O t\\u00EDtulo \\u00E9 obrigat\\u00F3rio.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MomentFormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, MomentFormComponent_div_7_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.title.errors == null ? null : ctx_r0.title.errors[\"required\"]);\n  }\n}\nfunction MomentFormComponent_div_12_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"A descri\\u00E7\\u00E3o \\u00E9 obrigat\\u00F3ria.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MomentFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, MomentFormComponent_div_12_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.description.errors == null ? null : ctx_r1.description.errors[\"required\"]);\n  }\n}\nexport class MomentFormComponent {\n  constructor() {\n    this.onSubmit = new EventEmitter();\n    this.momentData = null;\n  }\n  ngOnInit() {\n    if (this.momentData) {\n      console.log(this.momentData);\n      this.momentForm = new FormGroup({\n        id: new FormControl(this.momentData.id),\n        title: new FormControl(this.momentData.title, [Validators.required]),\n        description: new FormControl(this.momentData.description, [Validators.required]),\n        image: new FormControl('')\n      });\n    } else {\n      this.momentForm = new FormGroup({\n        id: new FormControl(''),\n        title: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required]),\n        image: new FormControl('')\n      });\n    }\n  }\n  get title() {\n    return this.momentForm.get('title');\n  }\n  get description() {\n    return this.momentForm.get('description');\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    this.momentForm.patchValue({\n      image: event.target.files[0]\n    });\n  }\n  submit() {\n    if (this.momentForm.invalid) {\n      return;\n    }\n    console.log(this.momentForm.value);\n    this.onSubmit.emit(this.momentForm.value);\n  }\n}\nMomentFormComponent.ɵfac = function MomentFormComponent_Factory(t) {\n  return new (t || MomentFormComponent)();\n};\nMomentFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MomentFormComponent,\n  selectors: [[\"app-moment-form\"]],\n  inputs: {\n    momentData: \"momentData\",\n    btnText: \"btnText\"\n  },\n  outputs: {\n    onSubmit: \"onSubmit\"\n  },\n  decls: 18,\n  vars: 3,\n  consts: [[3, \"ngSubmit\"], [1, \"form-group\"], [\"type\", \"hidden\", \"formControlName\", \"id\"], [\"for\", \"title\"], [\"type\", \"text\", \"formControlName\", \"title\", \"placeholder\", \"Coloque um t\\u00EDtulo\", \"required\", \"\"], [\"class\", \"validation-error\", 4, \"ngIf\"], [\"for\", \"description\"], [\"formControlName\", \"description\", \"placeholder\", \"O que aconteceu l\\u00E1?\"], [\"for\", \"image\"], [\"type\", \"file\", 3, \"change\"], [\"type\", \"submit\", 3, \"value\"], [1, \"validation-error\"], [4, \"ngIf\"]],\n  template: function MomentFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function MomentFormComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelement(2, \"input\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1)(4, \"label\", 3);\n      i0.ɵɵtext(5, \"T\\u00EDtulo:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 4);\n      i0.ɵɵtemplate(7, MomentFormComponent_div_7_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 1)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Descri\\u00E7\\u00E3o:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"textarea\", 7);\n      i0.ɵɵtemplate(12, MomentFormComponent_div_12_Template, 2, 1, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 1)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"Coloque a foto que mais marcou:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"change\", function MomentFormComponent_Template_input_change_16_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"input\", 10);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", ctx.title.invalid && ctx.formDir.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.description.invalid && ctx.formDir.submitted);\n      i0.ɵɵadvance(5);\n      i0.ɵɵpropertyInterpolate(\"value\", ctx.btnText);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["EventEmitter","FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtemplate","MomentFormComponent_div_7_p_1_Template","ɵɵadvance","ɵɵproperty","ctx_r0","title","errors","MomentFormComponent_div_12_p_1_Template","ctx_r1","description","MomentFormComponent","constructor","onSubmit","momentData","ngOnInit","console","log","momentForm","id","required","image","get","onFileSelected","event","file","target","files","patchValue","submit","invalid","value","emit","selectors","inputs","btnText","outputs","decls","vars","consts","template","MomentFormComponent_Template","rf","ctx","ɵɵlistener","MomentFormComponent_Template_form_ngSubmit_0_listener","ɵɵelement","MomentFormComponent_div_7_Template","MomentFormComponent_div_12_Template","MomentFormComponent_Template_input_change_16_listener","$event","formDir","submitted","ɵɵpropertyInterpolate"],"sources":["/home/priscila/Documentos/project-moments/moments/src/app/components/moment-form/moment-form.component.ts","/home/priscila/Documentos/project-moments/moments/src/app/components/moment-form/moment-form.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Moment } from 'src/app/Moment';\n\n@Component({\n  selector: 'app-moment-form',\n  templateUrl: './moment-form.component.html',\n  styleUrls: ['./moment-form.component.css'],\n})\nexport class MomentFormComponent implements OnInit {\n  @Output() onSubmit = new EventEmitter<Moment>();\n  @Input() momentData: Moment | null = null;\n  @Input() btnText!: string;\n\n  image?: File;\n\n  momentForm!: FormGroup;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.momentData) {\n      console.log(this.momentData);\n      this.momentForm = new FormGroup({\n        id: new FormControl(this.momentData.id),\n        title: new FormControl(this.momentData.title, [Validators.required]),\n        description: new FormControl(this.momentData.description, [\n          Validators.required,\n        ]),\n        image: new FormControl(''),\n      });\n    } else {\n      this.momentForm = new FormGroup({\n        id: new FormControl(''),\n        title: new FormControl('', [Validators.required]),\n        description: new FormControl('', [Validators.required]),\n        image: new FormControl(''),\n      });\n    }\n  }\n\n  get title() {\n    return this.momentForm.get('title')!;\n  }\n\n  get description() {\n    return this.momentForm.get('description')!;\n  }\n\n  onFileSelected(event: any) {\n    const file: File = event.target.files[0];\n\n    this.momentForm.patchValue({ image: event.target.files[0] });\n  }\n\n  submit() {\n    if (this.momentForm.invalid) {\n      return;\n    }\n\n    console.log(this.momentForm.value);\n\n    this.onSubmit.emit(this.momentForm.value);\n  }\n}","<!-- <form (ngSubmit)=\"submit()\" [formGroup]=\"momentForm\" #formDir=\"ngForm\"> -->\n<form (ngSubmit)=\"submit()\">\n  <div class=\"form-group\">\n    <input type=\"hidden\" formControlName=\"id\" />\n  </div>\n  <div class=\"form-group\">\n    <label for=\"title\">Título:</label>\n    <input\n      type=\"text\"\n      formControlName=\"title\"\n      placeholder=\"Coloque um título\"\n      required\n    />\n\n    <div *ngIf=\"title.invalid && formDir.submitted\" class=\"validation-error\">\n      <p *ngIf=\"title.errors?.['required']\">O título é obrigatório.</p>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"description\">Descrição:</label>\n    <textarea\n      formControlName=\"description\"\n      placeholder=\"O que aconteceu lá?\"\n    ></textarea>\n    <div\n      *ngIf=\"description.invalid && formDir.submitted\"\n      class=\"validation-error\"\n    >\n      <p *ngIf=\"description.errors?.['required']\">A descrição é obrigatória.</p>\n    </div>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"image\">Coloque a foto que mais marcou:</label>\n    <input\n      type=\"file\"\n      (change)=\"onFileSelected($event)\"\n    />\n  </div>\n  <input type=\"submit\" value=\"{{ btnText }}\" />\n</form>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}